@import "mixins";
@import "terrain_mixins";

@mixin swampBackground($color: 'darkgreen') {
  background-image: url("data:image/svg+xml;utf8, <svg viewBox='0 0 10 10' xmlns='http://www.w3.org/2000/svg'><line stroke='#{$color}' stroke-width='2' x1='0' x2='10' y1='5' y2='5'/></svg>");
  background-size: .18em;
  background-repeat: repeat;
}

$grass: #6ab336;
$shallowWater: #67e3ee;
$deepWater: #41cbe1;
$shallowBorder: .25em double rgba($shallowWater, .5);
$shoreBorder: .25em double #c3b42e;
$swamp: #178a73;
$swampBorder: .25em double rgba($swamp, .5);

.trees {
  background: $grass;

  &:before {
    @include size(0.65);
    border-radius: 50%;
    background: #1c861c;
    border: 0.1em solid rgba(darkgreen, .3);
  }
}

.denseTrees {
  background: $grass;

  &:before {
    @include size(0.90);
    border-radius: 50%;
    background: #1b731b;
    border: 0.2em solid rgba(darkgreen, .3);
  }
}

.meadow {
  background: $grass;

  &:before {
    @include size(1);
    opacity: 0.75;
    background-image: url("data:image/svg+xml;utf8, <svg viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'><circle fill='yellow' cx='5' cy='5' r='2'/><circle fill='darkgreen' cx='5' cy='15' r='2'/><circle fill='pink' cx='10' cy='10' r='2.5'/><circle fill='yellow' cx='15' cy='15' r='2'/><circle fill='darkgreen' cx='15' cy='5' r='2'/></svg>"
    );
    background-size: 50%;
    background-repeat: repeat;
  }
}

.swamp {
  @include smoothBorder('swamp', 30%);
  @include borderWith('shallowWater', $shallowBorder);
  @include borderWith('deepWater', $shallowBorder);
  @include shiftInto('shallowWater', $other: $shallowWater, $own: $swamp, $border-radius: 30%);
  background: $grass;
  position: relative;

  &:before {
    @include size(1);
    @include swampBackground;
    background-clip: content-box;
    border: 0.25em double $grass;
    position: relative;
    z-index: 2;
  }

  &:after {
    @include size(1);
    position: absolute;
    top: 0;
    left: 0;
    background: $swamp;
    z-index: 1;
  }

  &[class*="Water--top"][class*="Water--left"] {
    &:not([class*="Water--bottom"]):not([class*="Water--right"]) {
      background: linear-gradient(to bottom right, $shallowWater 50%, $grass 50%);
    }
  }

  &[class*="Water--top"][class*="Water--right"] {
    &:not([class*="Water--bottom"]):not([class*="Water--left"]) {
      background: linear-gradient(to bottom left, $shallowWater 50%, $grass 50%);
    }
  }

  &[class*="Water--bottom"][class*="Water--left"] {
    &:not([class*="Water--top"]):not([class*="Water--right"]) {
      background: linear-gradient(to top right, $shallowWater 50%, $grass 50%);
    }
  }

  &[class*="Water--bottom"][class*="Water--right"] {
    &:not([class*="Water--top"]):not([class*="Water--left"]) {
      background: linear-gradient(to top left, $shallowWater 50%, $grass 50%);
    }
  }
}

.rock {
  background: $grass;

  &:before {
    @include size(0.7);
    border-radius: 30%;
    background: #4e4843;
    border: 0.3em solid #433f3b;
    transform: rotate(45deg);
  }
}

.trail {
  background: $grass;
  overflow: hidden;
  position: relative;

  $trailWidth: 0.3em;
  $trailCenter: calc(50% - (0.3em / 2));
  $trailOutside: 29%;

  &:before, &:after {
    content: '';
    display: block;
    border-width: 0;
    border-color: #4e4843;
    border-style: dotted;
    position: absolute;
  }

  &:before {
    width: 0;
    height: 100%;
    top: 0;
    left: $trailCenter;
  }

  &:after {
    width: 100%;
    height: 0;
    top: $trailCenter;
    left: 0;
  }

  &:not([class*="--top"]), &:not([class*="--bottom"]) {
    &:before {
      border-left-width: $trailWidth;
    }
  }

  &:not([class*="--left"]), &:not([class*="--right"]) {
    &:before {
      border-left-width: $trailWidth;
    }
  }

  &[class*="--top"][class*="--bottom"][class*="--left"][class*="--right"] {
    &:not([class*="trail--"]) {
      &:before {
        height: 140%;
        top: -20%;
        border-left-width: 0.20em;
      }

      &:nth-child(3n) {
        &:before {
          transform: rotate(90deg);
        }
      }

      &:nth-child(4n+1) {
        &:before {
          transform: rotate(45deg);
        }
      }

      &:nth-child(4n) {
        &:before {
          transform: rotate(-45deg);
        }
      }
    }
  }

  &.trail--top.trail--bottom.trail--left.trail--right {
    &:before {
      border-left-width: $trailWidth;
    }

    &:after {
      top: 0;
      left: $trailCenter;
      height: 100%;
      width: 0;
      border-left-width: $trailWidth;
    }
  }

  &.trail--top.trail--bottom {
    &:before {
      border-left-width: $trailWidth;
    }

    &.trail--left:not(.trail--right) {
      &:after {
        left: unset;
        right: $trailOutside;
        width: 100%;
        height: 0;
        border-bottom-width: $trailWidth;
      }
    }

    &.trail--right:not(.trail--left) {
      &:after {
        left: $trailOutside;
        width: 100%;
        height: 0;
        border-bottom-width: $trailWidth;
      }
    }
  }

  &.trail--top, &.trail--bottom {
    &:not(.trail--left):not(.trail--right) {
      &:before {
        border-left-width: $trailWidth;
      }
    }
  }

  &.trail--left.trail--right {
    &:before {
      border-left-width: $trailWidth;
      transform: rotate(90deg);
    }

    &.trail--top:not(.trail--bottom) {
      &:after {
        top: unset;
        bottom: $trailOutside;
        left: $trailCenter;
        width: 0;
        height: 100%;
        border-left-width: $trailWidth;
      }
    }

    &.trail--bottom:not(.trail--top) {
      &:after {
        top: $trailOutside;
        left: $trailCenter;
        width: 0;
        height: 100%;
        border-left-width: $trailWidth;
      }
    }
  }

  &.trail--left, &.trail--right {
    &:not(.trail--top):not(.trail--bottom) {
      &:before {
        border-left-width: $trailWidth;
        transform: rotate(90deg);
      }
    }
  }

  &.trail--top:not(.trail--bottom) {
    &.trail--left:not(.trail--right) {
      &:before {
        width: $trailCenter;
        height: $trailCenter;
        left: 0;
        border-width: 0;
        border-bottom-width: $trailWidth;
        border-right-width: $trailWidth;
        border-bottom-right-radius: 100%;
      }
    }

    &.trail--right:not(.trail--left) {
      &:before {
        width: $trailCenter;
        height: $trailCenter;
        top: 0;
        left: $trailCenter;
        border-width: 0;
        border-bottom-width: $trailWidth;
        border-left-width: $trailWidth;
        border-bottom-left-radius: 100%;
      }
    }
  }

  &.trail--bottom:not(.trail--top) {
    &.trail--left:not(.trail--right) {
      &:before {
        width: $trailCenter;
        height: $trailCenter;
        top: $trailCenter;
        left: 0;
        border-width: 0;
        border-top-width: $trailWidth;
        border-right-width: $trailWidth;
        border-top-right-radius: 100%;
      }
    }

    &.trail--right:not(.trail--left) {
      &:before {
        width: $trailCenter;
        height: $trailCenter;
        top: $trailCenter;
        left: $trailCenter;
        border-width: 0;
        border-top-width: $trailWidth;
        border-left-width: $trailWidth;
        border-top-left-radius: 100%;
      }
    }
  }
}

.shallowWater {
  @include smoothBorder('Water');
  @include borderWith('swamp', 0);
  background: $grass;

  &:before {
    @include size(1);
    border: $shoreBorder;
    background: $shallowWater;
  }

  &[class*="--top"][class*="--bottom"][class*="--left"][class*="--right"] {
    &:not([class*="Water--"]):not([class*="swamp--"]) {
      &:before {
        background: #1ba085;
        border: 0.25em double $grass;
        border-radius: 30%;
      }
    }
  }
}

.deepWater {
  @include smoothBorder('Water');
  @include borderWith('shallowWater', $shallowBorder);
  @include shiftInto('shallowWater', $other: $shallowWater, $own: $deepWater);
  @include borderWith('swamp', 0);
  background: $grass;

  &:before {
    @include size(1);
    border: $shoreBorder;
    background: $deepWater;
  }

  &.shallowWater--top.shallowWater--left {
    &:not([class*="Water--bottom"]):not([class*="Water--right"]) {
      background: linear-gradient(to bottom right, $shallowWater 50%, $grass 50%);
    }
  }

  &.shallowWater--top.shallowWater--right {
    &:not([class*="Water--bottom"]):not([class*="Water--left"]) {
      background: linear-gradient(to bottom left, $shallowWater 50%, $grass 50%);
    }
  }

  &.shallowWater--bottom.shallowWater--left {
    &:not([class*="Water--top"]):not([class*="Water--right"]) {
      background: linear-gradient(to top right, $shallowWater 50%, $grass 50%);
    }
  }

  &.shallowWater--bottom.shallowWater--right {
    &:not([class*="Water--top"]):not([class*="Water--left"]) {
      background: linear-gradient(to top left, $shallowWater 50%, $grass 50%);
    }
  }
}
